const SHEET_ID = '1FBoGU29k1Bw-Pnp1aqsvtjZj2hIL8tccTl2-kj-zxCE'; // Replace with your Gsheet code
const SUBJECT_KEYWORDS = ['win', 'free', 'bonus', 'claim', 'swiggy','1mg','updates@myntra.com','order-update@amazon.in','nse_alerts@nse.co.in','no-reply-transaction-with-holding-statement@reportsmailer.zerodha.net','ICICIdirect.com','otp']; // Add your keywords
const NOTIFY_EMAIL = 'xyz123@gmail.com'; // Replace with your Gmail

function deleteSpamAndCustomFilteredEmails() {
  const sheet = SpreadsheetApp.openById(SHEET_ID);
  const logSheet = sheet.getSheetByName('Log');
  const blacklistSheet = sheet.getSheetByName('Blacklist');
  const now = new Date();
  const logData = [];

  // ❗ Ensure sheets exist
  if (!logSheet || !blacklistSheet) {
    throw new Error("❌ 'Log' or 'Blacklist' sheet not found.");
  }

  // 1. Handle Spam Threads
  const spamThreads = GmailApp.getSpamThreads();
  spamThreads.forEach(thread => {
    const message = thread.getMessages()[0];
    const subject = message.getSubject();
    const sender = message.getFrom();
    logData.push([now, sender, subject, 'Spam']);
  });
  GmailApp.moveThreadsToTrash(spamThreads);

  // 2. Handle Custom Blacklisted Emails with Expiry
  const blacklistRows = blacklistSheet.getRange(2, 1, blacklistSheet.getLastRow() - 1, 2).getValues();

  blacklistRows.forEach(([email, expiry]) => {
    if (!email) return;
    if (expiry && new Date(expiry) < now) return; // Skip expired

    const threads = GmailApp.search(`from:${email}`);
    threads.forEach(thread => {
      const message = thread.getMessages()[0];
      const subject = message.getSubject();
      const sender = message.getFrom();
      logData.push([now, sender, subject, `Blacklisted: ${email}`]);
    });
    GmailApp.moveThreadsToTrash(threads);
  });

  // 3. Handle Subject Keyword Filter
  const keywordQuery = SUBJECT_KEYWORDS.map(k => `subject:${k}`).join(' OR ');
  const keywordThreads = GmailApp.search(keywordQuery);
  keywordThreads.forEach(thread => {
    const message = thread.getMessages()[0];
    const subject = message.getSubject();
    const sender = message.getFrom();
    logData.push([now, sender, subject, 'Subject Keyword Match']);
  });
  GmailApp.moveThreadsToTrash(keywordThreads);

  // 4. Log Deleted Emails
  if (logData.length > 0) {
    logSheet.getRange(logSheet.getLastRow() + 1, 1, logData.length, 4).setValues(logData);
  }

  // 5. Gmail Notification Summary
  const subject = `🧹 Gmail Cleanup Summary - ${logData.length} Deleted`;
  const bodyLines = logData.map(
    ([date, sender, subject, reason]) => `- ${new Date(date).toLocaleString()}: ${sender} | "${subject}" | ${reason}`
  );
  const body = logData.length > 0
    ? `Hello Viplav,\n\nThe following emails were deleted by your automation script:\n\n${bodyLines.join('\n')}`
    : `Hello Viplav,\n\nNo emails were deleted in this run.`;

  MailApp.sendEmail(NOTIFY_EMAIL, subject, body);
}
